{
  "default function": {
    "prefix": "edf",
    "body": [
      "import { cn } from '@/lib/utils';",
      "",
      "export interface ${TM_FILENAME_BASE/(^[a-z])|((?<=[-])[a-z])|[-]/${1:/upcase}${2:/upcase}/g}Props {",
      "  className?: string;",
      "}",
      "",
      "export default function ${TM_FILENAME_BASE/(^[a-z])|((?<=[-])[a-z])|[-]/${1:/upcase}${2:/upcase}/g}({ className }: ${TM_FILENAME_BASE/(^[a-z])|((?<=[-])[a-z])|[-]/${1:/upcase}${2:/upcase}/g}Props) {",
      "  return <div className={cn(className)}>$0</div>;",
      "}"
    ],
    "description": "export default function"
  },
  "default function no props": {
    "prefix": "edfnp",
    "body": [
      "export default function ${TM_FILENAME_BASE/(^[a-z])|((?<=[-])[a-z])|[-]/${1:/upcase}${2:/upcase}/g}() {",
      "  return <div>$0</div>;",
      "}"
    ],
    "description": "export default function"
  },
  "context": {
    "prefix": "ctx",
    "body": [
      "'use client';",
      "import { createContext, useContext } from 'react';",
      "",
      "interface $0Props {}",
      "",
      "const $0 = createContext<$0Props>({});",
      "",
      "interface $0ProviderProps {",
      "  children: React.ReactNode;",
      "}",
      "",
      "export default function $0Provider({ children }: $0ProviderProps) {",
      "  return <$0.Provider value={{}}>{children}</$0.Provider>;",
      "}",
      "",
      "export function use$0() {",
      "  return useContext($0);",
      "}",
      "",
      "export { $0Provider };"
    ]
  },
  "dialog": {
    "prefix": "dialog",
    "body": [
      "import { Button } from '@/components/ui/button';",
      "import {",
      "\tDialog,",
      "\tDialogContent,",
      "\tDialogFooter,",
      "\tDialogHeader,",
      "\tDialogTitle,",
      "\tDialogTrigger,",
      "} from '@/components/ui/dialog';",
      "import useDialog from '@/hooks/use-dialog';",
      "import { cn } from '@/lib/utils';",
      "",
      "export interface $0DialogProps {",
      "\tclassName?: string;",
      "\tchildren?: React.ReactNode;",
      "}",
      "",
      "export default function $0Dialog({",
      "\tclassName,",
      "\tchildren,",
      "}: $0DialogProps) {",
      "\tconst dialog = useDialog();",
      "",
      "\treturn (",
      "\t\t<Dialog open={dialog.open} onOpenChange={dialog.setOpen}>",
      "\t\t\t<DialogTrigger asChild>{children}</DialogTrigger>",
      "\t\t\t<DialogContent className={cn(className)}>",
      "\t\t\t\t<DialogHeader>",
      "\t\t\t\t\t<DialogTitle></DialogTitle>",
      "\t\t\t\t</DialogHeader>",
      "\t\t\t\t<div className=\"my-6 space-y-4\"></div>",
      "\t\t\t\t<DialogFooter>",
      "\t\t\t\t\t<Button variant=\"ghost\" type=\"button\" onClick={dialog.onClose}>",
      "\t\t\t\t\t\tAnnuler",
      "\t\t\t\t\t</Button>",
      "\t\t\t\t\t<Button type=\"submit\">VALIDER</Button>",
      "\t\t\t\t</DialogFooter>",
      "\t\t\t</DialogContent>",
      "\t\t</Dialog>",
      "\t);",
      "}",
      ""
    ],
    "description": "dialog"
  },
  "dialogform": {
    "prefix": "dialogform",
    "body": [
      "import {",
      "\tConstructForm,",
      "\tconstructSchema,",
      "\tFormFieldsInfo,",
      "\tgetDefaultValues,",
      "} from '@/components/form/construct-form';",
      "import { Button } from '@/components/ui/button';",
      "import {",
      "\tDialog,",
      "\tDialogContent,",
      "\tDialogFooter,",
      "\tDialogHeader,",
      "\tDialogTitle,",
      "\tDialogTrigger,",
      "} from '@/components/ui/dialog';",
      "import { Form } from '@/components/ui/form';",
      "import useDialog from '@/hooks/use-dialog';",
      "import { cn } from '@/lib/utils';",
      "import { zodResolver } from '@hookform/resolvers/zod';",
      "import { useEffect, useMemo } from 'react';",
      "import { useForm } from 'react-hook-form';",
      "import { z } from 'zod';",
      "",
      "type $1Args = {};",
      "",
      "const getFieldsInfo = (): FormFieldsInfo<$1Args> => {",
      "\treturn {};",
      "};",
      "",
      "export interface $1DialogProps {",
      "\tclassName?: string;",
      "\tchildren?: React.ReactNode;",
      "}",
      "",
      "export default function $1Dialog({ className, children }: $1DialogProps) {",
      "\tconst dialog = useDialog();",
      "\tconst fieldsInfo = useMemo(() => getFieldsInfo(), []);",
      "\tconst schema = useMemo(() => constructSchema(fieldsInfo), [fieldsInfo]);",
      "\tconst form = useForm<$1Args>({",
      "\t\tresolver: zodResolver(schema),",
      "\t\tdefaultValues: getDefaultValues(fieldsInfo),",
      "\t});",
      "\tuseEffect(() => {",
      "\t\tform.reset(getDefaultValues(fieldsInfo));",
      "\t}, [fieldsInfo]);",
      "",
      "\tconst onSubmit = (values: $1Args) => {",
      "\t\tconsole.log(values);",
      "\t};",
      "$0",
      "\treturn (",
      "\t\t<Dialog open={dialog.open} onOpenChange={dialog.setOpen}>",
      "\t\t\t<DialogTrigger asChild>{children}</DialogTrigger>",
      "\t\t\t<DialogContent className={cn(className)}>",
      "\t\t\t\t<Form {...form}>",
      "\t\t\t\t\t<form onSubmit={form.handleSubmit(onSubmit)}>",
      "\t\t\t\t\t\t<DialogHeader>",
      "\t\t\t\t\t\t\t<DialogTitle>$1</DialogTitle>",
      "\t\t\t\t\t\t</DialogHeader>",
      "\t\t\t\t\t\t<div className=\"my-4 space-y-4\">",
      "\t\t\t\t\t\t\t<ConstructForm form={form} info={fieldsInfo} />",
      "\t\t\t\t\t\t</div>",
      "\t\t\t\t\t\t<DialogFooter>",
      "\t\t\t\t\t\t\t<Button variant=\"secondary\" type=\"button\" onClick={dialog.onClose}>",
      "\t\t\t\t\t\t\t\tAnnuler",
      "\t\t\t\t\t\t\t</Button>",
      "\t\t\t\t\t\t\t<Button type=\"submit\">Cr√©er</Button>",
      "\t\t\t\t\t\t</DialogFooter>",
      "\t\t\t\t\t</form>",
      "\t\t\t\t</Form>",
      "\t\t\t</DialogContent>",
      "\t\t</Dialog>",
      "\t);",
      "}",
      ""
    ]
  }
}
